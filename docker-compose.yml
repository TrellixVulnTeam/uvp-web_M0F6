version: "3.8"

secrets:
  dns_api_token:
    file: "./secrets/dns_api_token.secret"
  pgadmin_default_email:
    file: "./secrets/pgadmin_default_email.secret"
  pgadmin_default_password:
    file: "./secrets/pgadmin_default_password.secret"

services:
  proxy:
    image: traefik:v2.2
    container_name: proxy
    command:
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8888
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/lets-encrypt/acme.json
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN_PROD}`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.tls.certresolver=letsencrypt
      - traefik.http.services.dashboard.loadbalancer.server.port=8888
      # HTTP Redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.redirect-https.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.redirect-https.entrypoints=web
      - traefik.http.routers.redirect-https.middlewares=redirect-to-https

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: prod-stage
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN_PROD}`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt

  backend:
    container_name: backend
    build:
      context: ./backend
      target: prod-stage
    command: /bin/bash -c "gunicorn -k uvicorn.workers.UvicornWorker -c ./gunicorn_conf.py app.main:app"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG-false}
      - SERVER_NAME=${DOMAIN_PROD}
      - SERVER_HOST=https://${DOMAIN_PROD}
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`${DOMAIN_PROD}`) && PathPrefix(`/token`,`/api`,`/ws`,`/docs`,`/redoc`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.tls.certresolver=letsencrypt
      - traefik.http.services.backend.loadbalancer.server.port=8000

  redis:
    container_name: redis
    image: "redis:5-alpine"

  postgres:
    container_name: postgres
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN_PROD}`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
      - traefik.http.services.pgadmin.loadbalancer.server.port=5050

volumes:
  postgres_data: null
